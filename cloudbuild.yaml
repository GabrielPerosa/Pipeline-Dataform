steps:
  # Passo 1: Clonar o repositÃ³rio
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        git clone https://github.com/GabrielPerosa/Pipeline-Dataform.git
        cd Pipeline-Dataform
        git branch -a
        git fetch origin
        git checkout main

  # Passo 2: Instalar SQLFluff
  - name: 'python:3.9'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        pip install --no-cache-dir sqlfluff

  # Passo 3: Verificar qualidade dos scripts SQL
  - name: 'python:3.9'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        sqlfluff lint definitions/ > lint-results.txt
        if grep -q "L:  " lint-results.txt; then
          echo "SQL Quality Check Failed. Emailing ${_COMMIT_AUTHOR_EMAIL}."
          echo "SQL Quality Check Failed. Review lint-results.txt." | mail -s "SQL Lint Failure" ${_COMMIT_AUTHOR_EMAIL}
          exit 1
        else
          echo "SQL Quality Check Passed."
        fi


  # Passo 5: Publicar no Dataform
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'dataform'
      - 'install'
      - '--repository="repositorio-producao"'
      - '--workspace="workspace-dataform-producao"'
      - '--location="southamerica-east1"'

substitutions:
  _COMMIT_AUTHOR_EMAIL: 'gabrielperosa493@gmail.com'

timeout: '1200s'
options:
  logging: CLOUD_LOGGING_ONLY
