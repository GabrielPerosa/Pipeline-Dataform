steps:
# Passo 1: Instalar dependÃªncias do SQLFluff
- name: 'python:3.9'
  entrypoint: 'bash'
  script: |
    pip install --no-cache-dir sqlfluff

# Passo 2: Verificar qualidade dos scripts SQL
- name: 'python:3.9'
  entrypoint: 'bash'
  script: |
    # Identificar o email do autor do commit
    COMMIT_AUTHOR_EMAIL="gabrielperosa493@gmail.com"  # E-mail fixo para testes
    # Executar o lint
    sqlfluff lint definitions/ > lint-results.txt
    # Verificar o resultado do lint
    if grep -q "L:  " lint-results.txt; then
      echo "Testes SQL falharam. Notificando erro por email."
      echo "SQL Quality Check Failed. Review the errors in lint-results.txt." | mail -s "SQL Lint Failure" $COMMIT_AUTHOR_EMAIL
      exit 1
    else
      echo "SQL Quality Check Passed."
    fi

# Passo 3: Mesclar na branch main caso os testes passem
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  script: |
    git checkout main
    git merge workspace-dataform-teste
    git push origin main

# Passo 4: Enviar scripts para o Dataform
- name: 'gcr.io/cloud-builders/gcloud'
  args: [
    'dataform', 'install',
    '--repository="repositorio-dataform"',
    '--workspace="workspace-dataform"',
    '--location="us-central1"'
  ]

substitutions:
  _COMMIT_AUTHOR_EMAIL: 'gabrielperosa493@gmail.com'

timeout: '1200s'
