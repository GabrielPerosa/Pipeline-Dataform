steps:
  # Passo 1: Clonar o repositório
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Clonando o repositório..."
        git clone https://github.com/GabrielPerosa/Pipeline-Dataform.git || { echo "Falha ao clonar o repositório"; exit 1; }
        cd Pipeline-Dataform
        git fetch origin  # Faz o fetch para garantir que todas as branches sejam baixadas
        git checkout workspace-dataform-teste || { echo "Falha ao fazer checkout na branch workspace-dataform-teste"; exit 1; }

  # Passo 2: Instalar dependências do SQLFluff
  - name: 'python:3.9'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Instalando dependências do SQLFluff..."
        pip install --no-cache-dir sqlfluff

  # Passo 3: Verificar qualidade dos scripts SQL
  - name: 'python:3.9'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Verificando qualidade dos arquivos SQL..."
        sqlfluff lint definitions/ > lint-results.txt
        if grep -q "L:  " lint-results.txt; then
          echo "Testes SQL falharam. Verifique os erros em lint-results.txt."
          exit 1
        else
          echo "Testes SQL passaram."
        fi

  # Passo 4: Instalar Node.js, npm, Dataform e limpar node_modules
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Verificando configuração do gcloud..."
        gcloud auth list || { echo "Falha ao verificar autenticação"; exit 1; }
        gcloud config list || { echo "Falha ao listar configurações"; exit 1; }
        gcloud --version
        echo "Instalando Node.js e npm..."
        
        # Instalar o Node.js e npm
        curl -sL https://deb.nodesource.com/setup_16.x | bash - || { echo "Falha ao instalar Node.js"; exit 1; }
        apt-get install -y nodejs || { echo "Falha ao instalar npm"; exit 1; }

        # Remover a pasta node_modules se ela existir
        echo "Removendo a pasta node_modules, se existir..."
        rm -rf /workspace/node_modules || { echo "Falha ao remover node_modules"; exit 1; }

        echo "Instalando o Dataform..."
        
        # Instalar o Dataform globalmente
        npm install -g @dataform/cli || { echo "Falha ao instalar o Dataform"; exit 1; }

        echo "Executando Dataform..."
        
        # Comando atualizado para execução do Dataform
        dataform run || { echo "Falha ao executar o Dataform"; exit 1; }

        # Exibir informações de depuração detalhadas
        echo "Verificando informações de autenticação do GCP..."
        gcloud auth print-access-token || { echo "Falha ao obter token de acesso"; exit 1; }

        # Verificando a conta configurada no gcloud
        gcloud config get-value account || { echo "Conta não configurada corretamente"; exit 1; }

        echo "Informações do projeto:"
        gcloud config get-value project || { echo "Projeto não configurado corretamente"; exit 1; }

        # Listando informações de todos os projetos para verificar o contexto
        gcloud projects list || { echo "Falha ao listar projetos"; exit 1; }
        
substitutions:
  _AUTHOR_EMAIL: 'gabrielperosa493@gmail.com'

timeout: '1200s'

options:
  logging: CLOUD_LOGGING_ONLY
