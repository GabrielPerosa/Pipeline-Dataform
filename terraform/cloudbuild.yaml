steps:
  - id: 'git config'
    name: 'alpine/git'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Configurando credenciais do Git..."
        git config --global user.name "$_GIT_USER_NAME"
        git config --global user.email "$_GIT_USER_EMAIL"

  - id: 'clone repo'
    name: 'alpine/git'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Clonando o repositório..."
        git clone https://${_GIT_USER_NAME}:${_GIT_TOKEN}@github.com/GabrielPerosa/Pipeline-Dataform.git
        cd Pipeline-Dataform

  - id: 'check commits'
    name: 'alpine/git'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Verificando novos commits na branch $_FEATURE_NAME..."
        git checkout $_FEATURE_NAME
        git pull origin $_FEATURE_NAME
        if [ "$(git log origin/$_BRANCH_NAME..HEAD --oneline)" = "" ]; then
          echo "Nenhum novo commit encontrado na branch $_FEATURE_NAME. Finalizando o pipeline."
          exit 0
        fi
        echo "Novos commits encontrados na branch $_FEATURE_NAME."

  - id: 'merge branch'
    name: 'alpine/git'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Fazendo checkout da branch $_FEATURE_NAME..."
        git checkout $_FEATURE_NAME
        git pull
        echo "Fazendo merge da branch $_FEATURE_NAME na $_BRANCH_NAME..."
        git checkout $_BRANCH_NAME
        git pull
        git merge $_FEATURE_NAME --allow-unrelated-histories -X theirs
        echo "Push das mudanças para a branch $_BRANCH_NAME..."
        git push

  - id: 'dataform update'
    name: 'node:16'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        echo "Instalando o Dataform CLI..."
        npm install -g @dataform/cli

        echo "Instalando dependências do projeto Dataform..."
        npm install

        echo "Compilando o projeto Dataform..."
        dataform compile

        echo "Executando o projeto Dataform..."
        dataform run

        echo "Dataform atualizado com sucesso."
        echo "Tudo pronto ."

options:
  logging: CLOUD_LOGGING_ONLY